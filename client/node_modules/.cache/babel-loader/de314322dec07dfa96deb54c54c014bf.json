{"ast":null,"code":"var _jsxFileName = \"/Users/vicky/Documents/clothing-saga/src/pages/shop-page/shop-page.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom'; // 錯誤： Route要帶 {}\n\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStart } from '../../redux/shop/shop-actions';\nimport CollectionOverviewContainer from '../../components/collection-overview/collection-overview.container';\nimport CollectionPageContainer from '../collection-page/collection-page-container'; //因為shop_data裡面的數據都已經被轉移到firebase裡面了，那需要把firebase的數據跟reducer連結起來，需要用到shop_data數據的components' nearest parent\n//component is shop-page.js，所以要在這裡fetch firebase\n//第一步，把ShopPage改為class function\n// const ShopPage = ({match}) => {\n//    return(\n//         <div className='shop-page'>\n//             <Route exact path = {`${match.path}`} component={CollectionOverview} /> \n//             <Route path = {`${match.path}/:collectionId`} component={CollectionPage}   /> \n//          </div>\n//     )\n// }\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStart\n    } = this.props;\n    fetchCollectionsStart();\n  } //     collectionRef.onSnapshot(async snopshot => {\n  //         const collectionsMap = convertCollectionsSnopshotToMap(snopshot);\n  //         updateCollections(collectionsMap);\n  //         this.setState({loading: false});\n  //     });\n  // }\n  //這裡用上convertCollectionsSnopshotToMap這個function了之後，就可以在網頁裡看到我們得到了an array of object裡面包含了我們需要的所有有用的東西\n  //最後的collectionsMap就是shop_data的最終版本，現在要把這些在前台的數據放在reducer裡面\n\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverviewContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPageContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToMap = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n}); //mapDispatchToMap 這一步的最終結果是在shop-reducer裡面有了一個新的collection,裡面有原本在shop_data的東西,\n//這樣資料就被通過fire base儲存在後端了，並且隨時根據後端的資料更新來更新前端的東西\n\n\nexport default connect(null, mapDispatchToMap)(ShopPage);","map":{"version":3,"sources":["/Users/vicky/Documents/clothing-saga/src/pages/shop-page/shop-page.js"],"names":["React","Route","connect","fetchCollectionsStart","CollectionOverviewContainer","CollectionPageContainer","ShopPage","Component","componentDidMount","props","render","match","path","mapDispatchToMap","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AAEA,OAAOC,2BAAP,MAAwC,oEAAxC;AACA,OAAOC,uBAAP,MAAoC,8CAApC,C,CAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AACnCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACL,MAAAA;AAAD,QAA0B,KAAKM,KAArC;AACAN,IAAAA,qBAAqB;AACxB,GAJkC,CAMnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAO,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKF,KAArB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAK,GAAEE,KAAK,CAACC,IAAK,EAF1B;AAGI,MAAA,SAAS,EAAIR,2BAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAMI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAK,GAAEO,KAAK,CAACC,IAAK,gBAD1B;AAEI,MAAA,SAAS,EAAIP,uBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAaH;;AA9BkC;;AAkCvC,MAAMQ,gBAAgB,GAAGC,QAAQ,KAAK;AAClCX,EAAAA,qBAAqB,EAAE,MAAKW,QAAQ,CAACX,qBAAqB,EAAtB;AADF,CAAL,CAAjC,C,CAIA;AACA;;;AAGA,eAAeD,OAAO,CAAC,IAAD,EAAOW,gBAAP,CAAP,CAAgCP,QAAhC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\n// 錯誤： Route要帶 {}\nimport {connect} from 'react-redux';\n\nimport { fetchCollectionsStart } from '../../redux/shop/shop-actions';\n\nimport CollectionOverviewContainer from '../../components/collection-overview/collection-overview.container';\nimport CollectionPageContainer from '../collection-page/collection-page-container';\n\n//因為shop_data裡面的數據都已經被轉移到firebase裡面了，那需要把firebase的數據跟reducer連結起來，需要用到shop_data數據的components' nearest parent\n//component is shop-page.js，所以要在這裡fetch firebase\n//第一步，把ShopPage改為class function\n\n\n// const ShopPage = ({match}) => {\n//    return(\n//         <div className='shop-page'>\n//             <Route exact path = {`${match.path}`} component={CollectionOverview} /> \n//             <Route path = {`${match.path}/:collectionId`} component={CollectionPage}   /> \n//          </div>\n//     )\n// }\n\n\n\nclass ShopPage extends React.Component {\n    componentDidMount(){\n        const {fetchCollectionsStart} = this.props;\n        fetchCollectionsStart();\n    }\n\n    //     collectionRef.onSnapshot(async snopshot => {\n    //         const collectionsMap = convertCollectionsSnopshotToMap(snopshot);\n    //         updateCollections(collectionsMap);\n    //         this.setState({loading: false});\n    //     });\n    // }\n    //這裡用上convertCollectionsSnopshotToMap這個function了之後，就可以在網頁裡看到我們得到了an array of object裡面包含了我們需要的所有有用的東西\n    //最後的collectionsMap就是shop_data的最終版本，現在要把這些在前台的數據放在reducer裡面\n\n    render(){\n        const {match} = this.props;\n        return(\n            <div className='shop-page'>\n                <Route \n                    exact \n                    path = {`${match.path}`} \n                    component = {CollectionOverviewContainer}\n                />\n                <Route \n                    path = {`${match.path}/:collectionId`} \n                    component = {CollectionPageContainer}\n                /> \n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToMap = dispatch => ({\n    fetchCollectionsStart: ()=> dispatch(fetchCollectionsStart())\n});\n\n//mapDispatchToMap 這一步的最終結果是在shop-reducer裡面有了一個新的collection,裡面有原本在shop_data的東西,\n//這樣資料就被通過fire base儲存在後端了，並且隨時根據後端的資料更新來更新前端的東西\n\n\nexport default connect(null, mapDispatchToMap)(ShopPage);"]},"metadata":{},"sourceType":"module"}