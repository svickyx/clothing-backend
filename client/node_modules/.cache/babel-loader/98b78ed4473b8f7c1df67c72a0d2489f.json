{"ast":null,"code":"import memoize from 'lodash.memoize';\nimport { createSelector } from 'reselect'; // const COLLECTION_ID_MAP = {\n//     hats: 1,\n//     jackets: 2,\n//     sneakers: 3,\n//     womens: 4, \n//     mens: 5\n// }\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []); //這個新的selector是為了把shop_data裡面的object轉化成array, 然後map成一個新的array\n//如果碰到錯誤是：cannot convert null/undefine to object, 解決辦法是：\n//這裡用到if collections exists, 用Object.keys這些東西，如果不存在，是shop-reducer裡面初始狀態的null狀態，即return an empty array[]\n\nexport const selectCollection = memoize(collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null //這裡？ ： 是為了解決當在collection page的時候，出現錯誤： cannot read property \"womens/hats...\" of null\n)); //這個function的功能是因為在shop page裡面的url, /shop/hats 或者/shop/jackets 後面的urlparams 是string, 但是實際的collection.id是數字，\n//為了找到相對應的id 而創造出來的function\n//redux-thunk related\n\nexport const selectCollectionIsFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectorCollectionLoaded = createSelector([selectShop], shop => !!shop.collections //在shop.collections前面加兩個！！的意思是，如果shop.collection is an empty object {}, !!{} => true, otherwise, 任何其他東西都會是flase, \n// !![], !!null, !!‘’ => false\n);","map":{"version":3,"sources":["/Users/vicky/Documents/clothing-saga/src/redux/shop/shop-selector.js"],"names":["memoize","createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectCollectionIsFetching","isFetching","selectorCollectionLoaded"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,SAAQC,cAAR,QAA6B,UAA7B,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,WAF8B,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACrD,CAACI,iBAAD,CADqD,EAErDC,WAAW,IACXA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAH,GACT,EAJmD,CAAlD,C,CAMP;AACA;AACA;;AAEA,OAAO,MAAMC,gBAAgB,GAAGZ,OAAO,CAAEa,kBAAD,IACpCZ,cAAc,CACV,CAACI,iBAAD,CADU,EAEVC,WAAW,IAAKA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IAFtD,CAGV;AAHU,CADqB,CAAhC,C,CAOP;AACA;AAGA;;AACA,OAAO,MAAMC,0BAA0B,GAAGb,cAAc,CACpD,CAACC,UAAD,CADoD,EAEpDE,IAAI,IAAIA,IAAI,CAACW,UAFuC,CAAjD;AAKP,OAAO,MAAMC,wBAAwB,GAAGf,cAAc,CAClD,CAACC,UAAD,CADkD,EAElDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAFmC,CAGlD;AACA;AAJkD,CAA/C","sourcesContent":["import memoize from 'lodash.memoize';\nimport {createSelector} from 'reselect';\n\n\n// const COLLECTION_ID_MAP = {\n//     hats: 1,\n//     jackets: 2,\n//     sneakers: 3,\n//     womens: 4, \n//     mens: 5\n// }\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n    [selectShop],\n    shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n    [selectCollections],\n    collections => \n    collections ? Object.keys(collections).map(key => collections[key]) \n    : []\n)\n//這個新的selector是為了把shop_data裡面的object轉化成array, 然後map成一個新的array\n//如果碰到錯誤是：cannot convert null/undefine to object, 解決辦法是：\n//這裡用到if collections exists, 用Object.keys這些東西，如果不存在，是shop-reducer裡面初始狀態的null狀態，即return an empty array[]\n\nexport const selectCollection = memoize((collectionUrlParam) => \n    createSelector(\n        [selectCollections],\n        collections => (collections ? collections[collectionUrlParam] : null)\n        //這裡？ ： 是為了解決當在collection page的時候，出現錯誤： cannot read property \"womens/hats...\" of null\n    )\n);\n//這個function的功能是因為在shop page裡面的url, /shop/hats 或者/shop/jackets 後面的urlparams 是string, 但是實際的collection.id是數字，\n//為了找到相對應的id 而創造出來的function\n\n\n//redux-thunk related\nexport const selectCollectionIsFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n);\n\nexport const selectorCollectionLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections\n    //在shop.collections前面加兩個！！的意思是，如果shop.collection is an empty object {}, !!{} => true, otherwise, 任何其他東西都會是flase, \n    // !![], !!null, !!‘’ => false\n)"]},"metadata":{},"sourceType":"module"}